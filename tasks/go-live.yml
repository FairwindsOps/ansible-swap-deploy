---
  - fail: msg="asg_deploy_name must be populated for go-live step"
    when: asg_deploy_name is undefined or asg_deploy_name == ""

  - name: add autoscaling group to load balancer
    command: aws autoscaling --region "{{ asg_deploy_aws_region }}" attach-load-balancers --auto-scaling-group-name "{{ asg_deploy_uuid }}" --load-balancer-names "{{ item }}"
    with_items: "{{ asg_deploy_elbs }}"
    register: aws_command
    failed_when: "'client error' in aws_command.stdout"

  - fail: msg="aws command failed to run. potential issue with installed version. {{ aws_command }}"
    when: "aws_command.rc is defined and aws_command.rc != 0"

  - name: wait for elbs to be attached
    ec2_asg: "{{asg_deploy_ec2_asg_parameters}}"
    register: asg_deploy_active_elbs
    until:  ( asg_deploy_elbs | intersect(asg_deploy_active_elbs.load_balancers) ) == asg_deploy_elbs
    delay: 10
    retries: 180

  - name: remove new autoscaling group from temp load balancer
    command: aws autoscaling --region "{{ asg_deploy_aws_region }}" detach-load-balancers --auto-scaling-group-name "{{asg_deploy_uuid}}" --load-balancer-names "{{ asg_deploy_temp_elb_name }}"
    register: aws_command
    failed_when: "'client error' in aws_command.stdout"

  - debug: var=aws_command
    when: debug

    # this version of the "wait for elbs to be detached" task purposely avoids the use of the above ec2_asg module so as not to trigger the
    # creation of an asg when it only needs to be queried.
  - name: wait for elbs to be detached
    shell: aws autoscaling --region "{{ asg_deploy_aws_region }}" describe-auto-scaling-groups --auto-scaling-group-names "{{asg_deploy_uuid}}"
    register: describe_asg
    until: asg_deploy_temp_elb_name not in (describe_asg.stdout | from_json).AutoScalingGroups[0].LoadBalancerNames

  - name: find autoscaling groups to decommission
    ec2_asg_find:
      region: "{{ asg_deploy_aws_region }}"
      name_regex: "{{ asg_deploy_name }}.*"
      sort: yes
      sort_end: -1
    register: asg_deploy_decomm_asg

  - name: remove to be decommisioned autoscaling groups from load balancers
    command: aws autoscaling --region "{{ asg_deploy_aws_region }}" detach-load-balancers --auto-scaling-group-name "{{ item.0.name }}" --load-balancer-names "{{ item.1 }}"
    register: aws_command
    with_nested:
      - "{{asg_deploy_decomm_asg.results}}"
      - "{{asg_deploy_elbs}}"
    failed_when: "'client error' in aws_command.stdout"

  - name: wait for elbs to be detached
    ec2_asg:
      region: "{{ asg_deploy_aws_region }}"
      name: "{{ item.name }}"
    register: asg_deploy_active_elbs
    with_items: asg_deploy_decomm_asg.results
    until: ( asg_deploy_elbs | intersect(asg_deploy_active_elbs.load_balancers) ) == []
